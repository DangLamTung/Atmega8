Archive member included because of file (symbol)

d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o (exit)
d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              lcd.o (__do_copy_data)
d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              i2c.o (__do_clear_bss)
d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              main.o (itoa)
d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

I2C_ErrorCode       0x1               i2c.o

Discarded input sections

 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 .text          0x00000000        0x0 font.o
 .data          0x00000000        0x0 font.o
 .bss           0x00000000        0x0 font.o
 .text          0x00000000        0x0 i2c.o
 .data          0x00000000        0x0 i2c.o
 .bss           0x00000000        0x0 i2c.o
 .text.i2c_readAck
                0x00000000        0x0 i2c.o
 .text.writeResgister
                0x00000000        0x0 i2c.o
 .text.ds1307_writeaddr
                0x00000000        0x0 i2c.o
 .text          0x00000000        0x0 lcd.o
 .data          0x00000000        0x0 lcd.o
 .bss           0x00000000        0x0 lcd.o
 .text.lcd_drawRect
                0x00000000        0x0 lcd.o
 .text.lcd_drawBitmap
                0x00000000        0x0 lcd.o
 .text.clr_buffer
                0x00000000        0x0 lcd.o
 .text.lcd_invert
                0x00000000        0x0 lcd.o
 .text.lcd_puts_p
                0x00000000        0x0 lcd.o
 .text          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text._Z10run_columnv
                0x00000000        0x0 main.o
 .text._Z3clrv  0x00000000        0x0 main.o
 .bss.date      0x00000000        0x0 main.o
 .bss.i         0x00000000        0x0 main.o
 .bss.x_old     0x00000000        0x0 main.o
 .bss.y_old     0x00000000        0x0 main.o
 .data.portbhistory
                0x00000000        0x0 main.o
 .bss.start_game
                0x00000000        0x0 main.o
 .bss.mode      0x00000000        0x0 main.o
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
LOAD font.o
LOAD i2c.o
LOAD lcd.o
LOAD main.o
START GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libm.a
END GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libm.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x157e
 *(.vectors)
 .vectors       0x00000000       0x68 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068      0x284 font.o
                0x00000068                ssd1306oled_font
                0x000002d8                special_char
 .progmem.data  0x000002ec       0x1b lcd.o
                0x000002ec                init_sequence
                0x00000308                . = ALIGN (0x2)
 *fill*         0x00000307        0x1 00
                0x00000308                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000308        0x0 linker stubs
 *(.trampolines*)
                0x00000308                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000308                __ctors_start = .
 *(.ctors)
                0x00000308                __ctors_end = .
                0x00000308                __dtors_start = .
 *(.dtors)
                0x00000308                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000308        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000308                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000308        0xc d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000314       0x16 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000314                __do_copy_data
 .init4         0x0000032a       0x10 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000032a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000033a        0x8 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000342        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328p.o
                0x00000342                __vector_22
                0x00000342                __vector_24
                0x00000342                __vector_12
                0x00000342                __bad_interrupt
                0x00000342                __vector_6
                0x00000342                __vector_3
                0x00000342                __vector_23
                0x00000342                __vector_25
                0x00000342                __vector_11
                0x00000342                __vector_13
                0x00000342                __vector_17
                0x00000342                __vector_19
                0x00000342                __vector_7
                0x00000342                __vector_4
                0x00000342                __vector_9
                0x00000342                __vector_21
                0x00000342                __vector_15
                0x00000342                __vector_8
                0x00000342                __vector_14
                0x00000342                __vector_10
                0x00000342                __vector_16
                0x00000342                __vector_18
                0x00000342                __vector_20
                0x00000346                . = ALIGN (0x2)
 *(.text.*)
 .text.i2c_init
                0x00000346       0x12 i2c.o
                0x00000346                i2c_init
 .text.i2c_start
                0x00000358       0x64 i2c.o
                0x00000358                i2c_start
 .text.i2c_stop
                0x000003bc        0x8 i2c.o
                0x000003bc                i2c_stop
 .text.i2c_byte
                0x000003c4       0x34 i2c.o
                0x000003c4                i2c_byte
 .text.i2c_readNAck
                0x000003f8       0x36 i2c.o
                0x000003f8                i2c_readNAck
 .text.readResgister
                0x0000042e       0x2a i2c.o
                0x0000042e                readResgister
 .text.ds1307_read_reg
                0x00000458       0x18 i2c.o
                0x00000458                ds1307_read_reg
 .text.ds1307_read_sec
                0x00000470       0x2c i2c.o
                0x00000470                ds1307_read_sec
 .text.lcd_charMode
                0x0000049c        0x6 lcd.o
                0x0000049c                lcd_charMode
 .text.lcd_drawPixel
                0x000004a2       0x7a lcd.o
                0x000004a2                lcd_drawPixel
 .text.lcd_drawLine
                0x0000051c       0xee lcd.o
                0x0000051c                lcd_drawLine
 .text.lcd_fillRect
                0x0000060a       0x64 lcd.o
                0x0000060a                lcd_fillRect
 .text.lcd_drawCircle
                0x0000066e      0x176 lcd.o
                0x0000066e                lcd_drawCircle
 .text.lcd_fillCircle
                0x000007e4       0x32 lcd.o
                0x000007e4                lcd_fillCircle
 .text.lcd_data
                0x00000816       0x4c lcd.o
                0x00000816                lcd_data
 .text.lcd_command
                0x00000862       0x44 lcd.o
                0x00000862                lcd_command
 .text.lcd_set_contrast
                0x000008a6       0x24 lcd.o
                0x000008a6                lcd_set_contrast
 .text.lcd_sleep
                0x000008ca       0x36 lcd.o
                0x000008ca                lcd_sleep
 .text.lcd_gotoxy
                0x00000900       0x78 lcd.o
                0x00000900                lcd_gotoxy
 .text.lcd_display
                0x00000978       0x30 lcd.o
                0x00000978                lcd_display
 .text.lcd_putc
                0x000009a8      0x30c lcd.o
                0x000009a8                lcd_putc
 .text.lcd_puts
                0x00000cb4       0x1e lcd.o
                0x00000cb4                lcd_puts
 .text.lcd_home
                0x00000cd2        0xa lcd.o
                0x00000cd2                lcd_home
 .text.lcd_clrscr
                0x00000cdc       0x48 lcd.o
                0x00000cdc                lcd_clrscr
 .text.lcd_init
                0x00000d24       0x66 lcd.o
                0x00000d24                lcd_init
 .text.__vector_2
                0x00000d8a       0x50 main.o
                0x00000d8a                __vector_2
 .text.__vector_5
                0x00000dda       0x26 main.o
                0x00000dda                __vector_5
 .text._Z11init_buttonv
                0x00000e00       0x52 main.o
                0x00000e00                init_button()
 .text._Z11delete_ballhh
                0x00000e52        0xa main.o
                0x00000e52                delete_ball(unsigned char, unsigned char)
 .text.__vector_1
                0x00000e5c       0x84 main.o
                0x00000e5c                __vector_1
 .text._Z9move_ballhh
                0x00000ee0        0xa main.o
                0x00000ee0                move_ball(unsigned char, unsigned char)
 .text._Z6playerh
                0x00000eea        0xa main.o
                0x00000eea                player(unsigned char)
 .text._Z9move_balliiii
                0x00000ef4        0xe main.o
                0x00000ef4                move_ball(int, int, int, int)
 .text._Z13delete_columnii
                0x00000f02       0x3a main.o
                0x00000f02                delete_column(int, int)
 .text._Z11draw_columnii
                0x00000f3c       0x3a main.o
                0x00000f3c                draw_column(int, int)
 .text._Z11player_moveiii
                0x00000f76       0x28 main.o
                0x00000f76                player_move(int, int, int)
 .text._Z11delete_moveiii
                0x00000f9e       0x14 main.o
                0x00000f9e                delete_move(int, int, int)
 .text._Z10draw_fieldv
                0x00000fb2       0x38 main.o
                0x00000fb2                draw_field()
 .text._Z9conditionv
                0x00000fea      0x198 main.o
                0x00000fea                condition()
 .text._Z7openingv
                0x00001182       0x22 main.o
                0x00001182                opening()
 .text._Z8end_gamev
                0x000011a4       0x32 main.o
                0x000011a4                end_game()
 .text._Z9ping_pongv
                0x000011d6       0x5a main.o
                0x000011d6                ping_pong()
 .text._Z11flappy_birdv
                0x00001230       0x92 main.o
                0x00001230                flappy_bird()
 .text._Z6intro1v
                0x000012c2       0x32 main.o
                0x000012c2                intro1()
 .text._Z5introv
                0x000012f4       0x32 main.o
                0x000012f4                intro()
 .text.ds1307_read
                0x00001326       0x3e main.o
                0x00001326                ds1307_read
 .text._Z9show_timev
                0x00001364       0xc0 main.o
                0x00001364                show_time()
 .text.main     0x00001424       0xcc main.o
                0x00001424                main
 .text.avr-libc
                0x000014f0       0x42 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x000014f0                itoa
 .text.avr-libc
                0x00001532       0x20 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00001532                strrev
 .text.libgcc   0x00001552       0x28 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00001552                __udivmodhi4
                0x0000157a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000157a        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000157a                exit
                0x0000157a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000157a        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000157e                _etext = .

.data           0x00800100       0x76 load address 0x0000157e
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100       0x70 main.o
 *(.data*)
 .data.charMode
                0x00800170        0x1 lcd.o
 .data.player_speed
                0x00800171        0x2 main.o
                0x00800171                player_speed
 .data.player_size
                0x00800173        0x2 main.o
                0x00800173                player_size
 .data.pos      0x00800175        0x1 main.o
                0x00800175                pos
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800176                . = ALIGN (0x2)
                0x00800176                _edata = .
                0x00800176                PROVIDE (__data_end, .)

.bss            0x00800176      0x418
                0x00800176                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.cursorPosition
                0x00800176        0x2 lcd.o
 .bss.displayBuffer
                0x00800178      0x400 lcd.o
 .bss.sec       0x00800578        0x1 main.o
                0x00800578                sec
 .bss.min       0x00800579        0x1 main.o
                0x00800579                min
 .bss.hour      0x0080057a        0x1 main.o
                0x0080057a                hour
 .bss.day       0x0080057b        0x1 main.o
                0x0080057b                day
 .bss.month     0x0080057c        0x1 main.o
                0x0080057c                month
 .bss.year      0x0080057d        0x1 main.o
                0x0080057d                year
 .bss.x         0x0080057e        0x2 main.o
                0x0080057e                x
 .bss.y         0x00800580        0x2 main.o
                0x00800580                y
 .bss.speedX    0x00800582        0x2 main.o
                0x00800582                speedX
 .bss.speedY    0x00800584        0x2 main.o
                0x00800584                speedY
 .bss.player1   0x00800586        0x2 main.o
                0x00800586                player1
 .bss.score1    0x00800588        0x2 main.o
                0x00800588                score1
 .bss.buff      0x0080058a        0x1 main.o
                0x0080058a                buff
 .bss.doc       0x0080058b        0x1 main.o
                0x0080058b                doc
 .bss.game_mode
                0x0080058c        0x1 main.o
                0x0080058c                game_mode
 *(COMMON)
 COMMON         0x0080058d        0x1 i2c.o
                0x0080058d                I2C_ErrorCode
                0x0080058e                PROVIDE (__bss_end, .)
                0x0000157e                __data_load_start = LOADADDR (.data)
                0x000015f4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080058e        0x0
                0x0080058e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080058e                PROVIDE (__noinit_end, .)
                0x0080058e                _end = .
                0x0080058e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x218
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x70 i2c.o
 .debug_aranges
                0x00000070       0xc8 lcd.o
 .debug_aranges
                0x00000138       0xe0 main.o

.debug_pubnames
                0x00000000      0x506
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x38 font.o
 .debug_pubnames
                0x00000038       0xdc i2c.o
 .debug_pubnames
                0x00000114      0x182 lcd.o
 .debug_pubnames
                0x00000296      0x270 main.o

.debug_info     0x00000000     0x14a6
 *(.debug_info)
 .debug_info    0x00000000       0xc5 font.o
 .debug_info    0x000000c5      0x2b2 i2c.o
 .debug_info    0x00000377      0xa9f lcd.o
 .debug_info    0x00000e16      0x690 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x537
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x5d font.o
 .debug_abbrev  0x0000005d      0x109 i2c.o
 .debug_abbrev  0x00000166      0x214 lcd.o
 .debug_abbrev  0x0000037a      0x1bd main.o

.debug_line     0x00000000     0x1418
 *(.debug_line)
 .debug_line    0x00000000       0x4d font.o
 .debug_line    0x0000004d      0x34a i2c.o
 .debug_line    0x00000397      0x7de lcd.o
 .debug_line    0x00000b75      0x8a3 main.o

.debug_frame    0x00000000      0x3d0
 *(.debug_frame)
 .debug_frame   0x00000000       0xc0 i2c.o
 .debug_frame   0x000000c0      0x170 lcd.o
 .debug_frame   0x00000230      0x1a0 main.o

.debug_str      0x00000000      0x641
 *(.debug_str)
 .debug_str     0x00000000       0xac font.o
                                 0xe5 (size before relaxing)
 .debug_str     0x000000ac       0xd2 i2c.o
                                0x192 (size before relaxing)
 .debug_str     0x0000017e      0x1cc lcd.o
                                0x2f1 (size before relaxing)
 .debug_str     0x0000034a      0x2f7 main.o
                                0x3c1 (size before relaxing)

.debug_loc      0x00000000     0x1052
 *(.debug_loc)
 .debug_loc     0x00000000       0xfa i2c.o
 .debug_loc     0x000000fa      0xd2e lcd.o
 .debug_loc     0x00000e28      0x22a main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(secondStep.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x2c8
 .debug_ranges  0x00000000       0x68 i2c.o
 .debug_ranges  0x00000068      0x158 lcd.o
 .debug_ranges  0x000001c0      0x108 main.o
