Archive member included because of file (symbol)

d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)

Discarded input sections

 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .text          0x00000000        0x0 i2c.o
 .data          0x00000000        0x0 i2c.o
 .bss           0x00000000        0x0 i2c.o
 .text.TWI_Start
                0x00000000        0x0 i2c.o
 .text.TWI_Startr
                0x00000000        0x0 i2c.o
 .text.TWI_Stop
                0x00000000        0x0 i2c.o
 .text.waitI2C  0x00000000        0x0 i2c.o
 .text.get_i2c_status
                0x00000000        0x0 i2c.o
 .text.I2C_Init
                0x00000000        0x0 i2c.o
 .text.readI2C  0x00000000        0x0 i2c.o
 .text.readI2Crepeat
                0x00000000        0x0 i2c.o
 .text.writeI2C
                0x00000000        0x0 i2c.o
 .text.readI2CAck
                0x00000000        0x0 i2c.o
 .text.readI2CNack
                0x00000000        0x0 i2c.o
 .text.I2C_Slave_Init
                0x00000000        0x0 i2c.o
 .text.I2C_Slave_Listen
                0x00000000        0x0 i2c.o
 .text.I2C_Slave_Transmit
                0x00000000        0x0 i2c.o
 .text.I2C_Slave_Receive
                0x00000000        0x0 i2c.o
 .text          0x00000000        0x0 lcd.o
 .data          0x00000000        0x0 lcd.o
 .bss           0x00000000        0x0 lcd.o
 .text.read2Nib
                0x00000000        0x0 lcd.o
 .text.write2Nib
                0x00000000        0x0 lcd.o
 .text.wait_LCD
                0x00000000        0x0 lcd.o
 .text.init_LCD
                0x00000000        0x0 lcd.o
 .text.home_LCD
                0x00000000        0x0 lcd.o
 .text.move_LCD
                0x00000000        0x0 lcd.o
 .text.clr_LCD  0x00000000        0x0 lcd.o
 .text.putchar_LCD
                0x00000000        0x0 lcd.o
 .text.print_LCD
                0x00000000        0x0 lcd.o
 .text          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text._Z10TWI_Startrv
                0x00000000        0x0 main.o
 .text._Z8TWI_Stopv
                0x00000000        0x0 main.o
 .text._Z13readI2Crepeatc
                0x00000000        0x0 main.o
 .text._Z10readI2CAckv
                0x00000000        0x0 main.o
 .text._Z11readI2CNackv
                0x00000000        0x0 main.o
 .text._Z14I2C_Slave_Inith
                0x00000000        0x0 main.o
 .text._Z16I2C_Slave_Listenv
                0x00000000        0x0 main.o
 .text._Z18I2C_Slave_Transmitc
                0x00000000        0x0 main.o
 .text._Z17I2C_Slave_Receivev
                0x00000000        0x0 main.o
 .text._Z8read2Nibv
                0x00000000        0x0 main.o
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD i2c.o
LOAD lcd.o
LOAD main.o
START GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libm.a
END GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libm.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x27c
 *(.vectors)
 .vectors       0x00000000       0x26 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000048        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000004c        0x2 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000004c                __vector_1
                0x0000004c                __vector_12
                0x0000004c                __bad_interrupt
                0x0000004c                __vector_6
                0x0000004c                __vector_3
                0x0000004c                __vector_11
                0x0000004c                __vector_13
                0x0000004c                __vector_17
                0x0000004c                __vector_7
                0x0000004c                __vector_5
                0x0000004c                __vector_4
                0x0000004c                __vector_9
                0x0000004c                __vector_2
                0x0000004c                __vector_15
                0x0000004c                __vector_8
                0x0000004c                __vector_14
                0x0000004c                __vector_10
                0x0000004c                __vector_16
                0x0000004c                __vector_18
                0x0000004e                . = ALIGN (0x2)
 *(.text.*)
 .text._Z9TWI_Startv
                0x0000004e        0x6 main.o
                0x0000004e                TWI_Start()
 .text._Z7waitI2Cv
                0x00000054        0xc main.o
                0x00000054                waitI2C()
 .text._Z14get_i2c_statusv
                0x00000060        0x6 main.o
                0x00000060                get_i2c_status()
 .text._Z8I2C_Initv
                0x00000066        0x8 main.o
                0x00000066                I2C_Init()
 .text._Z7readI2Cc
                0x0000006e       0x34 main.o
                0x0000006e                readI2C(char)
 .text._Z8writeI2Cc
                0x000000a2       0x34 main.o
                0x000000a2                writeI2C(char)
 .text._Z9write2Nibh
                0x000000d6       0x32 main.o
                0x000000d6                write2Nib(unsigned char)
 .text._Z8wait_LCDv
                0x00000108        0xa main.o
                0x00000108                wait_LCD()
 .text._Z8init_LCDv
                0x00000112       0x62 main.o
                0x00000112                init_LCD()
 .text._Z8home_LCDv
                0x00000174       0x12 main.o
                0x00000174                home_LCD()
 .text._Z8move_LCDhh
                0x00000186       0x2a main.o
                0x00000186                move_LCD(unsigned char, unsigned char)
 .text._Z7clr_LCDv
                0x000001b0       0x12 main.o
                0x000001b0                clr_LCD()
 .text._Z11putchar_LCDh
                0x000001c2       0x10 main.o
                0x000001c2                putchar_LCD(unsigned char)
 .text._Z9print_LCDPch
                0x000001d2       0x38 main.o
                0x000001d2                print_LCD(char*, unsigned char)
 .text.main     0x0000020a       0x6e main.o
                0x0000020a                main
                0x00000278                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000278        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000278                exit
                0x00000278                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000278        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000027c                _etext = .

.data           0x00800060       0x16 load address 0x0000027c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060       0x15 main.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800076                . = ALIGN (0x2)
 *fill*         0x00800075        0x1 00
                0x00800076                _edata = .
                0x00800076                PROVIDE (__data_end, .)

.bss            0x00800076        0x0
                0x00800076                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x00800076                PROVIDE (__bss_end, .)
                0x0000027c                __data_load_start = LOADADDR (.data)
                0x00000292                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800076        0x0
                0x00800076                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800076                PROVIDE (__noinit_end, .)
                0x00800076                _end = .
                0x00800076                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x1d0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x90 i2c.o
 .debug_aranges
                0x00000090       0x60 lcd.o
 .debug_aranges
                0x000000f0       0xe0 main.o

.debug_pubnames
                0x00000000      0x31b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x107 i2c.o
 .debug_pubnames
                0x00000107       0x8b lcd.o
 .debug_pubnames
                0x00000192      0x189 main.o

.debug_info     0x00000000      0xa62
 *(.debug_info)
 .debug_info    0x00000000      0x293 i2c.o
 .debug_info    0x00000293      0x277 lcd.o
 .debug_info    0x0000050a      0x558 main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x38f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xe4 i2c.o
 .debug_abbrev  0x000000e4      0x114 lcd.o
 .debug_abbrev  0x000001f8      0x197 main.o

.debug_line     0x00000000      0xf19
 *(.debug_line)
 .debug_line    0x00000000      0x422 i2c.o
 .debug_line    0x00000422      0x333 lcd.o
 .debug_line    0x00000755      0x7c4 main.o

.debug_frame    0x00000000      0x340
 *(.debug_frame)
 .debug_frame   0x00000000      0x100 i2c.o
 .debug_frame   0x00000100       0xa0 lcd.o
 .debug_frame   0x000001a0      0x1a0 main.o

.debug_str      0x00000000      0x3fb
 *(.debug_str)
 .debug_str     0x00000000      0x167 i2c.o
                                0x1b6 (size before relaxing)
 .debug_str     0x00000167       0xa8 lcd.o
                                0x171 (size before relaxing)
 .debug_str     0x0000020f      0x1ec main.o
                                0x3df (size before relaxing)

.debug_loc      0x00000000      0x576
 *(.debug_loc)
 .debug_loc     0x00000000      0x1a2 i2c.o
 .debug_loc     0x000001a2       0xd9 lcd.o
 .debug_loc     0x0000027b      0x2fb main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(testI2cmaster.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x200
 .debug_ranges  0x00000000       0x88 i2c.o
 .debug_ranges  0x00000088       0x58 lcd.o
 .debug_ranges  0x000000e0      0x120 main.o
