
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000146  000001ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000146  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ec  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000133  00000000  00000000  00000dc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000ef5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e4       	ldi	r30, 0x46	; 70
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 97 00 	call	0x12e	; 0x12e <main>
  8e:	0c 94 a1 00 	jmp	0x142	; 0x142 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <writeLCD>:
  96:	85 b9       	out	0x05, r24	; 5
  98:	5c 9a       	sbi	0x0b, 4	; 11
  9a:	5c 98       	cbi	0x0b, 4	; 11
  9c:	08 95       	ret

0000009e <waitLCD>:
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	5c 98       	cbi	0x0b, 4	; 11
  a2:	5a 98       	cbi	0x0b, 2	; 11
  a4:	5b 9a       	sbi	0x0b, 3	; 11
  a6:	84 b9       	out	0x04, r24	; 4
  a8:	85 b9       	out	0x05, r24	; 5
  aa:	5c 9a       	sbi	0x0b, 4	; 11
  ac:	14 b8       	out	0x04, r1	; 4
  ae:	1f 99       	sbic	0x03, 7	; 3
  b0:	f7 cf       	rjmp	.-18     	; 0xa0 <waitLCD+0x2>
  b2:	5c 98       	cbi	0x0b, 4	; 11
  b4:	5b 98       	cbi	0x0b, 3	; 11
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	84 b9       	out	0x04, r24	; 4
  ba:	08 95       	ret

000000bc <init_lcd>:
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	84 b9       	out	0x04, r24	; 4
  c0:	85 b9       	out	0x05, r24	; 5
  c2:	5a 98       	cbi	0x0b, 2	; 11
  c4:	5b 98       	cbi	0x0b, 3	; 11
  c6:	5c 98       	cbi	0x0b, 4	; 11
  c8:	88 e3       	ldi	r24, 0x38	; 56
  ca:	0e 94 4b 00 	call	0x96	; 0x96 <writeLCD>
  ce:	0e 94 4f 00 	call	0x9e	; 0x9e <waitLCD>
  d2:	5a 98       	cbi	0x0b, 2	; 11
  d4:	8e e0       	ldi	r24, 0x0E	; 14
  d6:	0e 94 4b 00 	call	0x96	; 0x96 <writeLCD>
  da:	0e 94 4f 00 	call	0x9e	; 0x9e <waitLCD>
  de:	5a 98       	cbi	0x0b, 2	; 11
  e0:	86 e0       	ldi	r24, 0x06	; 6
  e2:	0e 94 4b 00 	call	0x96	; 0x96 <writeLCD>
  e6:	0c 94 4f 00 	jmp	0x9e	; 0x9e <waitLCD>

000000ea <clr_lcd>:
  ea:	5a 98       	cbi	0x0b, 2	; 11
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 4b 00 	call	0x96	; 0x96 <writeLCD>
  f2:	0c 94 4f 00 	jmp	0x9e	; 0x9e <waitLCD>

000000f6 <putchar_lcd>:
  f6:	5a 9a       	sbi	0x0b, 2	; 11
  f8:	0e 94 4b 00 	call	0x96	; 0x96 <writeLCD>
  fc:	0c 94 4f 00 	jmp	0x9e	; 0x9e <waitLCD>

00000100 <printLCD>:
 100:	0f 93       	push	r16
 102:	1f 93       	push	r17
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
 10a:	8c 01       	movw	r16, r24
 10c:	06 0f       	add	r16, r22
 10e:	11 1d       	adc	r17, r1
 110:	c0 17       	cp	r28, r16
 112:	d1 07       	cpc	r29, r17
 114:	39 f0       	breq	.+14     	; 0x124 <printLCD+0x24>
 116:	89 91       	ld	r24, Y+
 118:	81 11       	cpse	r24, r1
 11a:	01 c0       	rjmp	.+2      	; 0x11e <printLCD+0x1e>
 11c:	80 e2       	ldi	r24, 0x20	; 32
 11e:	0e 94 7b 00 	call	0xf6	; 0xf6 <putchar_lcd>
 122:	f6 cf       	rjmp	.-20     	; 0x110 <printLCD+0x10>
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	1f 91       	pop	r17
 12a:	0f 91       	pop	r16
 12c:	08 95       	ret

0000012e <main>:
 12e:	0e 94 5e 00 	call	0xbc	; 0xbc <init_lcd>
 132:	0e 94 75 00 	call	0xea	; 0xea <clr_lcd>
 136:	62 e0       	ldi	r22, 0x02	; 2
 138:	80 e0       	ldi	r24, 0x00	; 0
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	0e 94 80 00 	call	0x100	; 0x100 <printLCD>
 140:	ff cf       	rjmp	.-2      	; 0x140 <main+0x12>

00000142 <_exit>:
 142:	f8 94       	cli

00000144 <__stop_program>:
 144:	ff cf       	rjmp	.-2      	; 0x144 <__stop_program>
