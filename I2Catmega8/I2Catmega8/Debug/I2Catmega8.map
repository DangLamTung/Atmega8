Archive member included because of file (symbol)

d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)

Discarded input sections

 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .text          0x00000000        0x0 lcd.o
 .data          0x00000000        0x0 lcd.o
 .bss           0x00000000        0x0 lcd.o
 .text.read2Nib
                0x00000000        0x0 lcd.o
 .text.write2Nib
                0x00000000        0x0 lcd.o
 .text.wait_LCD
                0x00000000        0x0 lcd.o
 .text.init_LCD
                0x00000000        0x0 lcd.o
 .text.home_LCD
                0x00000000        0x0 lcd.o
 .text.move_LCD
                0x00000000        0x0 lcd.o
 .text.clr_LCD  0x00000000        0x0 lcd.o
 .text.putchar_LCD
                0x00000000        0x0 lcd.o
 .text.print_LCD
                0x00000000        0x0 lcd.o
 .text          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text._Z8read2Nibv
                0x00000000        0x0 main.o
 .text._Z8move_LCDhh
                0x00000000        0x0 main.o
 .text._Z9print_LCDPch
                0x00000000        0x0 main.o
 .text._Z10readI2CAckv
                0x00000000        0x0 main.o
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD lcd.o
LOAD main.o
START GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libm.a
END GROUP
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libm.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x29e
 *(.vectors)
 .vectors       0x00000000       0x26 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000048        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000004c        0x2 d:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000004c                __vector_1
                0x0000004c                __vector_12
                0x0000004c                __bad_interrupt
                0x0000004c                __vector_6
                0x0000004c                __vector_3
                0x0000004c                __vector_11
                0x0000004c                __vector_13
                0x0000004c                __vector_17
                0x0000004c                __vector_7
                0x0000004c                __vector_5
                0x0000004c                __vector_4
                0x0000004c                __vector_9
                0x0000004c                __vector_2
                0x0000004c                __vector_15
                0x0000004c                __vector_8
                0x0000004c                __vector_14
                0x0000004c                __vector_10
                0x0000004c                __vector_16
                0x0000004c                __vector_18
                0x0000004e                . = ALIGN (0x2)
 *(.text.*)
 .text._Z9write2Nibh
                0x0000004e       0x32 main.o
                0x0000004e                write2Nib(unsigned char)
 .text._Z8wait_LCDv
                0x00000080        0xa main.o
                0x00000080                wait_LCD()
 .text._Z8init_LCDv
                0x0000008a       0x62 main.o
                0x0000008a                init_LCD()
 .text._Z8home_LCDv
                0x000000ec       0x12 main.o
                0x000000ec                home_LCD()
 .text._Z7clr_LCDv
                0x000000fe       0x12 main.o
                0x000000fe                clr_LCD()
 .text._Z11putchar_LCDh
                0x00000110       0x10 main.o
                0x00000110                putchar_LCD(unsigned char)
 .text._Z9TWI_Startv
                0x00000120        0x6 main.o
                0x00000120                TWI_Start()
 .text._Z10TWI_Startrv
                0x00000126        0x6 main.o
                0x00000126                TWI_Startr()
 .text._Z8TWI_Stopv
                0x0000012c       0x10 main.o
                0x0000012c                TWI_Stop()
 .text._Z7waitI2Cv
                0x0000013c        0xc main.o
                0x0000013c                waitI2C()
 .text._Z14get_i2c_statusv
                0x00000148        0x6 main.o
                0x00000148                get_i2c_status()
 .text._Z8I2C_Initv
                0x0000014e        0x8 main.o
                0x0000014e                I2C_Init()
 .text._Z7readI2Cc
                0x00000156       0x34 main.o
                0x00000156                readI2C(char)
 .text._Z13readI2Crepeatc
                0x0000018a       0x34 main.o
                0x0000018a                readI2Crepeat(char)
 .text._Z8writeI2Cc
                0x000001be       0x34 main.o
                0x000001be                writeI2C(char)
 .text._Z11readI2CNackv
                0x000001f2        0xa main.o
                0x000001f2                readI2CNack()
 .text.main     0x000001fc       0x9e main.o
                0x000001fc                main
                0x0000029a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000029a        0x0 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x0000029a                exit
                0x0000029a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000029a        0x4 d:/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000029e                _etext = .

.data           0x00800060        0xa load address 0x0000029e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0xa main.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080006a                . = ALIGN (0x2)
                0x0080006a                _edata = .
                0x0080006a                PROVIDE (__data_end, .)

.bss            0x0080006a        0x0
                0x0080006a                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x0080006a                PROVIDE (__bss_end, .)
                0x0000029e                __data_load_start = LOADADDR (.data)
                0x000002a8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006a        0x0
                0x0080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006a                PROVIDE (__noinit_end, .)
                0x0080006a                _end = .
                0x0080006a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x120
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x60 lcd.o
 .debug_aranges
                0x00000060       0xc0 main.o

.debug_pubnames
                0x00000000      0x1bf
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x8b lcd.o
 .debug_pubnames
                0x0000008b      0x134 main.o

.debug_info     0x00000000      0x732
 *(.debug_info)
 .debug_info    0x00000000      0x277 lcd.o
 .debug_info    0x00000277      0x4bb main.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2c3
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x114 lcd.o
 .debug_abbrev  0x00000114      0x1af main.o

.debug_line     0x00000000      0x9a6
 *(.debug_line)
 .debug_line    0x00000000      0x333 lcd.o
 .debug_line    0x00000333      0x673 main.o

.debug_frame    0x00000000      0x200
 *(.debug_frame)
 .debug_frame   0x00000000       0xa0 lcd.o
 .debug_frame   0x000000a0      0x160 main.o

.debug_str      0x00000000      0x2fc
 *(.debug_str)
 .debug_str     0x00000000      0x132 lcd.o
                                0x16b (size before relaxing)
 .debug_str     0x00000132      0x1ca main.o
                                0x325 (size before relaxing)

.debug_loc      0x00000000      0x2c8
 *(.debug_loc)
 .debug_loc     0x00000000       0xd9 lcd.o
 .debug_loc     0x000000d9      0x1ef main.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(I2Catmega8.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x110
 .debug_ranges  0x00000000       0x58 lcd.o
 .debug_ranges  0x00000058       0xb8 main.o
